@model WebApp.Models.HomeIndexViewModel
@using Chart.Mvc.Core.ComplexChart;
@using Chart.Mvc.Core.Extensions;

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js">
</script>

@{
    ViewData["Title"] = "Home Page";
}

<div class="container-fluid bg-3 text-center">
    <div class="row">
        <div class="col-sm-4">
        </div>
        <div class="col-sm-4 align-middle">
            <h3>Resumo - @Model.AnoRefefrencia.ToString()</h3><br>
        </div>
        <div class="col-sm-4">
            <div class="container-fluid bg-3 text-center">
                <div class="row">
                    <div class="col-sm-3">
                    </div>
                    <div class="col-sm-3">
                    </div>
                    <div class="col-sm-3">
                        <p class="p-3 mb-2 bg-light text-black">
                            @Html.ActionLink(
                                linkText: "<<",
                                actionName: "Index",
                                controllerName: "Home",
                                routeValues: new { ano = Model.AnoRefefrencia - 1 },
                                htmlAttributes: "")
                        </p>
                    </div>
                    <div class="col-sm-3">
                        <p class="p-3 mb-2 bg-light text-black">
                            @Html.ActionLink(
                                linkText: ">>",
                                actionName: "Index",
                                controllerName: "Home",
                                routeValues: new { ano = Model.AnoRefefrencia + 1 },
                                htmlAttributes: "")
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-4">
            <p class="p-3 mb-2 bg-info text-white">Saldo Corretora Atual</p>
            <p>@Html.Label(Model.SaldoCorretoraAtual)</p>
        </div>
        <div class="col-sm-4">
            <p class="p-3 mb-2 bg-info text-white">Saldo Total dos Trades</p>
            <p>@Html.Label(Model.SaldoTradesPeriodo)</p>
        </div>
        <div class="col-sm-4">
        </div>
    </div>
    <div class="row">
        <div class="col-sm-4">
            <p class="p-3 mb-2 bg-info text-white">Média de ganhos por dia</p>
            <p>@Html.Label(Model.MediaGanhosDia)</p>
        </div>
        <div class="col-sm-4">
            <p class="p-3 mb-2 bg-info text-white">Média de perdas</p>
            <p>@Html.Label(Model.MediaPerdasDia)</p>
        </div>
        <div class="col-sm-4">
            <p class="p-3 mb-2 bg-info text-white">Relação</p>
            <p>@Html.Label(Model.RelacaoGanhoPerda)</p>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-4">
            <p class="p-3 mb-2 bg-info text-white">Quantidade dias com ganhos</p>
            <p>@Html.Label(Model.QuantidadeGanhos)</p>
        </div>
        <div class="col-sm-4">
            <p class="p-3 mb-2 bg-info text-white">Quantidade dias com perdas</p>
            <p>@Html.Label(Model.QuantidadePerdas)</p>
        </div>
        <div class="col-sm-4">
            <p class="p-3 mb-2 bg-info text-white">Relação</p>
            <p>@Html.Label(Model.RelacaoQuantidadeGanhoPerda)</p>
        </div>
    </div>
</div>
<br>

@{
    ViewBag.Title = "Home Page";
    var meses = Model.ResultadoMes.Select(x => x.Key).ToArray();
    var valores_positivos = Model.ResultadoMes.Select(x => Convert.ToDouble(x.Value) > 0 ? Convert.ToDouble(x.Value) : 0).ToList();
    var valores_negativos = Model.ResultadoMes.Select(x => Convert.ToDouble(x.Value) < 0 ? Convert.ToDouble(x.Value) : 0).ToList();

    var barChart = new Chart.Mvc.Core.ComplexChart.Bar.BarChart();
    barChart.ComplexData.Labels.AddRange(meses);
    barChart.ChartConfiguration.Responsive = true;
    barChart.ChartConfiguration.MaintainAspectRatio = false;
    

    barChart.ComplexData.Datasets.AddRange(new List<ComplexDataset>{
                                      new ComplexDataset {
                                                              Data = valores_positivos,
                                                              BackgroundColor = "cornflowerblue",
                                                              Label="Lucro"
                                                          }
                                            });

    barChart.ComplexData.Datasets.AddRange(new List<ComplexDataset>{
                                      new ComplexDataset {
                                                              Data = valores_negativos,
                                                              BackgroundColor = "indianred",
                                                              Label="Prejuízo"
                                                          }
                                            });

}
<style>
    #chart-wrapper {
        display: inline-block;
        position: relative;
        height: 300px;
        width: 100%;
    }
</style>
<div id="chart-wrapper">
    <canvas id="myCanvas"></canvas>
</div>
@Html.CreateChart("myCanvas", barChart)
